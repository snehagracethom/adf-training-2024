{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-snehagracethomas"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable_tableUSA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLServer_assessmentdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "Zip",
						"type": "varchar"
					},
					{
						"name": "Units",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Revenue",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tableUSA"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable_tableadf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLServer_assessmentdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Id",
						"type": "nchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "RollNo",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tableadf"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable_tablecountry')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "Zip",
						"type": "varchar"
					},
					{
						"name": "Units",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Revenue",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tablecountry"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Table_HumanResources_Department')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adventureworks_2022",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DepartmentID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "GroupName",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "HumanResources",
					"table": "Department"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/table_department_destinationdb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServer_Destinationdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DepId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "Groupname",
						"type": "varchar"
					},
					{
						"name": "datemodified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Department"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText_USSalescsv",
								"type": "DatasetReference"
							},
							"name": "USASales"
						},
						{
							"dataset": {
								"referenceName": "Internationalcsv1",
								"type": "DatasetReference"
							},
							"name": "InternationalSales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sales_country",
								"type": "DatasetReference"
							},
							"name": "sinkContainer",
							"description": "Export data to container"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as string,",
						"          Date as string,",
						"          Zip as string,",
						"          Units as string,",
						"          Revenue as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> USASales",
						"source(output(",
						"          ProductID as string,",
						"          Date as string,",
						"          Zip as string,",
						"          Units as string,",
						"          Revenue as string,",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:['*.csv']) ~> InternationalSales",
						"USASales derive(Country = 'USA') ~> derivedColumn1",
						"derivedColumn1, InternationalSales union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          DepartmentID as string,",
						"          Name as string,",
						"          GroupName as string,",
						"          ModifiedDate as string",
						"     ),",
						"     partitionFileNames:['sales_country.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkContainer"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowRevenueForecasting')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_Sales_SalesOrderHeader",
								"type": "DatasetReference"
							},
							"name": "SalesSalesOrderHeader"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTableSalesCustomer",
								"type": "DatasetReference"
							},
							"name": "sourceSalesCustomer"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_SalesORderDetails",
								"type": "DatasetReference"
							},
							"name": "sourceSalesOrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "joinSalesOrderHeadertoSalesCustomer"
						},
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "filter1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "sort1"
						},
						{
							"name": "select3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesOrderID as integer,",
						"          RevisionNumber as integer,",
						"          OrderDate as timestamp,",
						"          DueDate as timestamp,",
						"          ShipDate as timestamp,",
						"          Status as integer,",
						"          OnlineOrderFlag as boolean,",
						"          SalesOrderNumber as string,",
						"          PurchaseOrderNumber as string,",
						"          AccountNumber as string,",
						"          CustomerID as integer,",
						"          SalesPersonID as integer,",
						"          TerritoryID as integer,",
						"          BillToAddressID as integer,",
						"          ShipToAddressID as integer,",
						"          ShipMethodID as integer,",
						"          CreditCardID as integer,",
						"          CreditCardApprovalCode as string,",
						"          CurrencyRateID as integer,",
						"          SubTotal as decimal(19,4),",
						"          TaxAmt as decimal(19,4),",
						"          Freight as decimal(19,4),",
						"          TotalDue as decimal(19,4),",
						"          Comment as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SalesSalesOrderHeader",
						"source(output(",
						"          CustomerID as integer,",
						"          PersonID as integer,",
						"          StoreID as integer,",
						"          TerritoryID as integer,",
						"          AccountNumber as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sourceSalesCustomer",
						"source(output(",
						"          SalesOrderID as integer,",
						"          SalesOrderDetailID as integer,",
						"          CarrierTrackingNumber as string,",
						"          OrderQty as integer,",
						"          ProductID as integer,",
						"          SpecialOfferID as integer,",
						"          UnitPrice as decimal(19,4),",
						"          UnitPriceDiscount as decimal(19,4),",
						"          LineTotal as decimal(38,6),",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sourceSalesOrderDetails",
						"SalesSalesOrderHeader, sourceSalesCustomer join(SalesSalesOrderHeader@CustomerID == sourceSalesCustomer@CustomerID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinSalesOrderHeadertoSalesCustomer",
						"joinSalesOrderHeadertoSalesCustomer select(mapColumn(",
						"          SalesOrderID,",
						"          OrderDate,",
						"          DueDate,",
						"          SalesOrderNumber,",
						"          PurchaseOrderNumber,",
						"          AccountNumber = SalesSalesOrderHeader@AccountNumber,",
						"          CustomerID = SalesSalesOrderHeader@CustomerID,",
						"          SalesPersonID,",
						"          TerritoryID = SalesSalesOrderHeader@TerritoryID,",
						"          SubTotal,",
						"          TaxAmt,",
						"          TotalDue,",
						"          TerritoryID = sourceSalesCustomer@TerritoryID,",
						"          AccountNumber = sourceSalesCustomer@AccountNumber",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1, sourceSalesOrderDetails join(select1@SalesOrderID == sourceSalesOrderDetails@SalesOrderID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          SalesOrderID = select1@SalesOrderID,",
						"          OrderDate,",
						"          DueDate,",
						"          SalesOrderNumber,",
						"          CustomerID,",
						"          SalesPersonID,",
						"          TerritoryID,",
						"          TotalDue,",
						"          OrderQty,",
						"          ProductID",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 filter(year(OrderDate) == 2014) ~> filter1",
						"filter1 aggregate(groupBy(ProductID,",
						"          OrderQty,",
						"          CustomerID,",
						"          OrderDate = month(OrderDate)),",
						"     sum_TotalDue = sum(TotalDue)) ~> aggregate1",
						"select3 sort(desc(sum_TotalDue, true)) ~> sort1",
						"aggregate1 select(mapColumn(",
						"          ProductID,",
						"          OrderQty,",
						"          CustomerID,",
						"          OrderMonth = OrderDate,",
						"          sum_TotalDue",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_Sales_Product')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "USASALES_CSV",
								"type": "DatasetReference"
							},
							"name": "USASALES"
						},
						{
							"dataset": {
								"referenceName": "international_sales_csv_metadata",
								"type": "DatasetReference"
							},
							"name": "InternationalSales"
						},
						{
							"dataset": {
								"referenceName": "Products_csv",
								"type": "DatasetReference"
							},
							"name": "Products"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable_tablesales1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable_tablesales2",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "cast1"
						},
						{
							"name": "cast2"
						},
						{
							"name": "derivedCountry"
						},
						{
							"name": "union1"
						},
						{
							"name": "totalrevenueaggregate"
						},
						{
							"name": "derivedCountryCode"
						},
						{
							"name": "surrogateKeyID"
						},
						{
							"name": "select1"
						},
						{
							"name": "joinSalesProducts"
						},
						{
							"name": "select2"
						},
						{
							"name": "split1"
						},
						{
							"name": "rank1"
						},
						{
							"name": "rank2"
						},
						{
							"name": "sort1"
						},
						{
							"name": "sort2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ProductID as string,",
						"          Date as string,",
						"          Zip as string,",
						"          Units as string,",
						"          Revenue as decimal(10,0)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> USASALES",
						"source(output(",
						"          ProductID as string,",
						"          Date as string,",
						"          Zip as string,",
						"          Units as string,",
						"          Revenue as decimal(10,0),",
						"          Country as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> InternationalSales",
						"source(output(",
						"          ProductID as string,",
						"          ProductName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Products",
						"InternationalSales cast(output(",
						"          Date as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"USASALES cast(output(",
						"          Date as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast2",
						"cast2 derive(Country = 'USA') ~> derivedCountry",
						"derivedCountry, cast1 union(byName: true)~> union1",
						"union1 aggregate(groupBy(Country,",
						"          ProductID),",
						"     TotalRevenue = sum(Revenue)) ~> totalrevenueaggregate",
						"totalrevenueaggregate derive(CountryCode = concat(upper(left(Country,3)),'12' ,upper(right(Country,2)))) ~> derivedCountryCode",
						"derivedCountryCode keyGenerate(output(SNo as long),",
						"     startAt: 100L,",
						"     stepValue: 1L) ~> surrogateKeyID",
						"surrogateKeyID select(mapColumn(",
						"          SNo,",
						"          ProductID,",
						"          CountryCode,",
						"          Country,",
						"          TotalRevenue",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1, Products join(select1@ProductID == Products@ProductID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinSalesProducts",
						"joinSalesProducts select(mapColumn(",
						"          SNo,",
						"          ProductID = select1@ProductID,",
						"          CountryCode,",
						"          Country,",
						"          ProductName,",
						"          TotalRevenue",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 split(TotalRevenue > 500.000,",
						"     disjoint: false) ~> split1@(Revenue, Others)",
						"split1@Revenue rank(desc(TotalRevenue, true),",
						"     output(rank as long)) ~> rank1",
						"split1@Others rank(desc(TotalRevenue, true),",
						"     output(Rank as long)) ~> rank2",
						"rank1 sort(asc(rank, true)) ~> sort1",
						"rank2 sort(asc(Rank, true)) ~> sort2",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"sort2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "AzureSqlTable3",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> AzureSqlTable3",
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared AzureSqlTable3 = let AdfDoc = Sql.Database(\"adf-training-2024.database.windows.net\", \"DestinationDatabase\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"table_sales\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"AzureSqlTable3\",\r\n  #\"Changed column type\" = Table.TransformColumnTypes(Source, {{\"Revenue\", type number}}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Changed column type\", \"Custom\", each [Units] * [Revenue]),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Added custom\", {{\"Custom\", \"Total\"}}),\r\n  #\"Inserted conditional column\" = Table.AddColumn(#\"Renamed columns\", \"CountryCode\", each if [Country] = \"India\" then \"IND\" else if [Country] = \"US\" then \"US\" else if [Country] = \"AUSTRALIA\" then \"AUS\" else \"NIL\") in #\"Inserted conditional column\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_pipeline_table_to_table1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1_adventuredb_destdb",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmpId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmpId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Lastname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable_Employee",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable_destEmployee",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-21T11:05:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_pipeline_storageacc_table2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "country",
										"value": "USA"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Id",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RollNo",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RollNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable_tableadf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-21T11:05:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable_tableadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_pipeline_storageacc_table3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "country",
										"value": "USA"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Zip",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Zip",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Units",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Units",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Revenue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_USSalescsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable_tableUSA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-21T11:05:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable_tableUSA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_pipeline_table_to_storageacc4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable_HumanResources_Department",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimittedText_HumanResorces_Department",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-21T11:05:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/5_pipeline_foreach_files_table5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Internationalcsv1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "InterntaionalSalesdataset2",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable_tablecountry",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-21T11:05:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable_tablecountry')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Web_copy_activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table employee_details",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['data']['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['data']['employee_name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['data']['employee_salary']"
										},
										"sink": {
											"name": "salary",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['data']['employee_age']"
										},
										"sink": {
											"name": "age",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['data']['profile_image']"
										},
										"sink": {
											"name": "profile_image",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource_employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable_employee_Details",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-23T04:05:52Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"USASales": {},
									"InternationalSales": {},
									"sinkContainer": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-24T07:02:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/exam_1st_table1hr_dept_to_table2department')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table Department",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DepartmentID",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "DepId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GroupName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Groupname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "datemodified",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Table_HumanResources_Department",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "table_department_destinationdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Table_HumanResources_Department')]",
				"[concat(variables('factoryId'), '/datasets/table_department_destinationdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/exam_2nd_azuredb_to_sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copy data from azuresql database from the db adventureworks2022 (tablename: Production.Product) to localsql db destionationdb (tablename: Production_Product)",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select top 100 ProductId, Name,ProductNumber, MakeFlag,safetystocklevel from Production.Product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table Production_Product",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MakeFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MakeFlag",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "safetystocklevel",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "safetystocklevel",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable_adventureworks_production_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable_production_product_destinationdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/exam_7th_dataflow_Sales_Product')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_Sales_Product",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"USASALES": {},
									"InternationalSales": {},
									"Products": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_tablesales]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDB_DestinationDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_Sales_Product')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowRevenueForecasting",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesSalesOrderHeader": {},
									"sourceSalesCustomer": {},
									"sourceSalesOrderDetails": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowRevenueForecasting')]"
			]
		}
	]
}