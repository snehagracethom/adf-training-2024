{
	"name": "dataflowRevenueForecasting",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable_Sales_SalesOrderHeader",
						"type": "DatasetReference"
					},
					"name": "SalesSalesOrderHeader"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTableSalesCustomer",
						"type": "DatasetReference"
					},
					"name": "sourceSalesCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1orderdate"
				},
				{
					"name": "aggregatemonthlysales"
				},
				{
					"name": "joinCustomertoSalesOrderHeader"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as date,",
				"          DueDate as date,",
				"          ShipDate as date,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          SalesPersonID as integer,",
				"          TerritoryID as integer,",
				"          BillToAddressID as integer,",
				"          ShipToAddressID as integer,",
				"          ShipMethodID as integer,",
				"          CreditCardID as integer,",
				"          CreditCardApprovalCode as string,",
				"          CurrencyRateID as integer,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesSalesOrderHeader",
				"source(output(",
				"          CustomerID as integer,",
				"          PersonID as integer,",
				"          StoreID as integer,",
				"          TerritoryID as integer,",
				"          AccountNumber as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourceSalesCustomer",
				"select1 filter(year(OrderMonth)==2014) ~> filter1orderdate",
				"filter1orderdate aggregate(groupBy(OrderDate = month(OrderMonth),",
				"          CustomerID,",
				"          OrderMonth = year(OrderMonth)),",
				"     TotalDue = sum(TotalDue)) ~> aggregatemonthlysales",
				"SalesSalesOrderHeader, sourceSalesCustomer join(SalesSalesOrderHeader@CustomerID == sourceSalesCustomer@CustomerID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCustomertoSalesOrderHeader",
				"joinCustomertoSalesOrderHeader select(mapColumn(",
				"          SalesOrderID,",
				"          RevisionNumber,",
				"          OrderMonth = OrderDate,",
				"          DueDate,",
				"          ShipDate,",
				"          Status,",
				"          OnlineOrderFlag,",
				"          SalesOrderNumber,",
				"          PurchaseOrderNumber,",
				"          AccountNumber = SalesSalesOrderHeader@AccountNumber,",
				"          CustomerID = SalesSalesOrderHeader@CustomerID,",
				"          SalesPersonID,",
				"          SubTotal,",
				"          TotalDue",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"aggregatemonthlysales sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}